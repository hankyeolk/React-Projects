{"ast":null,"code":"var _jsxFileName = \"/Users/hkkang/Desktop/React-Projects/twittler/src/components/TwitForm.js\";\nimport React, { Component } from \"react\";\nimport \"../App.css\";\n\nclass TwitForm extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      user: \"\",\n      message: \"\",\n      created_at: \"\"\n    };\n\n    this.handleChange = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault(); // 이 컴포넌트의 props에 onCreate를 부여하고,\n      // 그 props에 묶이는 함수에 this.state 인자로 전달\n\n      this.props.onCreate(this.state); // state 초기화\n\n      this.setState({\n        user: \"\",\n        message: \"\",\n        created_at: \"\"\n      });\n    };\n  }\n\n  generateNewTweet() {\n    var tweet = {};\n    tweet.user = randomUser[getRandomInt(0, randomUser.length)];\n    tweet.message = randomMessage[getRandomInt(0, randomMessage.length)];\n    tweet.created_at = new Date().format(); // 어떻게 하면 보기 좋은 형태로 나타낼 수 있을까요?\n\n    return tweet;\n  }\n\n  format() {\n    var yyyy = this.getFullYear();\n    var month = (this.getMonth() + 1).padLeft();\n    var dd = this.getDate().padLeft();\n    var HH = this.getHours().padLeft();\n    var mm = this.getMinutes().padLeft();\n    var ss = this.getSeconds().padLeft();\n    var format = [yyyy, month, dd].join(\"-\") + \" \" + [HH, mm, ss].join(\":\");\n    return format;\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      id: \"twit-form\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      placeholder: \"Please input you name\",\n      value: this.state.user,\n      name: \"user\",\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      placeholder: \"Twit your Twit\",\n      maxLength: \"140\",\n      value: this.state.message,\n      name: \"message\",\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }\n    }, \"register twit\")));\n  }\n\n}\n\nexport default TwitForm;","map":{"version":3,"sources":["/Users/hkkang/Desktop/React-Projects/twittler/src/components/TwitForm.js"],"names":["React","Component","TwitForm","state","user","message","created_at","handleChange","e","setState","target","name","value","handleSubmit","preventDefault","props","onCreate","generateNewTweet","tweet","randomUser","getRandomInt","length","randomMessage","Date","format","yyyy","getFullYear","month","getMonth","padLeft","dd","getDate","HH","getHours","mm","getMinutes","ss","getSeconds","join","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport \"../App.css\";\n\nclass TwitForm extends Component {\n  state = {\n    user: \"\",\n    message: \"\",\n    created_at: \"\",\n  };\n\n  generateNewTweet() {\n    var tweet = {};\n    tweet.user = randomUser[getRandomInt(0, randomUser.length)];\n    tweet.message = randomMessage[getRandomInt(0, randomMessage.length)];\n    tweet.created_at = new Date().format(); // 어떻게 하면 보기 좋은 형태로 나타낼 수 있을까요?\n    return tweet;\n  }\n  format() {\n    var yyyy = this.getFullYear();\n    var month = (this.getMonth() + 1).padLeft();\n    var dd = this.getDate().padLeft();\n    var HH = this.getHours().padLeft();\n    var mm = this.getMinutes().padLeft();\n    var ss = this.getSeconds().padLeft();\n\n    var format = [yyyy, month, dd].join(\"-\") + \" \" + [HH, mm, ss].join(\":\");\n    return format;\n  }\n\n  handleChange = (e) => {\n    this.setState({\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n\n    // 이 컴포넌트의 props에 onCreate를 부여하고,\n    // 그 props에 묶이는 함수에 this.state 인자로 전달\n    this.props.onCreate(this.state);\n\n    // state 초기화\n    this.setState({\n      user: \"\",\n      message: \"\",\n      created_at: \"\",\n    });\n  };\n\n  render() {\n    return (\n      <div id=\"twit-form\">\n        <form onSubmit={this.handleSubmit}>\n          <input\n            placeholder=\"Please input you name\"\n            value={this.state.user}\n            name=\"user\"\n            onChange={this.handleChange}\n          />\n          <input\n            placeholder=\"Twit your Twit\"\n            maxLength=\"140\"\n            value={this.state.message}\n            name=\"message\"\n            onChange={this.handleChange}\n          />\n          <button type=\"submit\">register twit</button>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default TwitForm;\n"]},"metadata":{},"sourceType":"module"}